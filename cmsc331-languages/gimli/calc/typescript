Script started on Thu 13 Oct 2016 02:01:07 PM EDT
linux2.gl.umbc.edu> cat -n calc331.y
     1  %{
     2  #include <stdio.h>
     3  
     4  int regs[26];
     5  int base;
     6  
     7  %}
     8  
     9  %start list
    10  
    11  %union { int a; }
    12  
    13  %type <a> expr number LETTER DIGIT
    14  
    15  %token DIGIT LETTER
    16  
    17  %left '|'
    18  %left '&'
    19  %left '+' '-'
    20  %left '*' '/' '%'
    21  %left UMINUS  /*supplies precedence for unary minus */
    22  
    23  %%                   /* beginning of rules section */
    24  
    25  list:                       /*empty */
    26           |
    27          list stat '\n'
    28           |
    29          list error '\n'
    30           {
    31             yyerrok;
    32           }
    33           ;
    34  
    35  stat:    expr
    36           {
    37             printf("%d\n",$1);
    38           }
    39           |
    40           LETTER '=' expr
    41           {
    42             regs[$1] = $3;
    43           }
    44  
    45           ;
    46  
    47  expr:    '(' expr ')'
    48           {
    49             $$ = $2;
    50           }
    51           |
    52           expr '*' expr
    53           {
    54  
    55             $$ = $1 * $3;
    56           }
    57           |
    58           expr '/' expr
    59           {
    60             if ($3 == 0) {
    61               fprintf(stderr, "divide by zero :-(");
    62               exit(0);
    63             }
    64             else
    65               $$ = $1 / $3;
    66           }
    67           |
    68           expr '%' expr
    69           {
    70             $$ = $1 % $3;
    71           }
    72           |
    73           expr '+' expr
    74           {
    75             $$ = $1 + $3;
    76           }
    77           |
    78           expr '-' expr
    79           {
    80             $$ = $1 - $3;
    81           }
    82           |
    83           expr '&' expr
    84           {
    85             $$ = $1 & $3;
    86           }
    87           |
    88           expr '|' expr
    89           {
    90             $$ = $1 | $3;
    91           }
    92           |
    93  
    94          '-' expr %prec UMINUS
    95           {
    96             $$ = -$2;
    97           }
    98           |
    99           LETTER
   100           {
   101             $$ = regs[$1];
   102           }
   103  
   104           |
   105           number
   106           ;
   107  
   108  number:  DIGIT
   109           {
   110             $$ = $1;
   111             base = ($1==0) ? 8 : 10;
   112           }       |
   113           number DIGIT
   114           {
   115             $$ = base * $1 + $2;
   116           }
   117           ;
   118  
   119  %%
   120  main()
   121  {
   122   return(yyparse());
   123  }
   124  
   125  yyerror(s)
   126  char *s;
   127  {
   128    fprintf(stderr, "%s\n",s);
   129  }
   130  
   131  yywrap()
   132  {
   133    return(1);
   134  }
linux2.gl.umbc.edu> make
yacc -d calc331.y
lex calc331.lex
gcc lex.yy.c y.tab.c -lm -o calc331
linux2.gl.umbc.edu> calc331
2+2
4
linux2.gl.umbc.edu> ^Dexit

Script done on Thu 13 Oct 2016 02:01:49 PM EDT
